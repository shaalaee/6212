This sample was generated by creating random arrays of 10 integers between 1-9 and searching for the 5th
smallest element. This was chosen because we should expect to see values around 5 to confirm the code 
is accurately working.

Array: [2 3 5 5 7 8 8 9 9 9]
Running Time in ns: 30040
5th smallest element is: 8
-----------------------------
Array: [1 2 3 3 6 7 7 8 8 9]
Running Time in ns: 23126
5th smallest element is: 7
-----------------------------
Array: [1 2 3 4 5 5 6 8 8 7]
Running Time in ns: 18119
5th smallest element is: 5
-----------------------------
Array: [2 2 2 3 3 6 6 8 8 9]
Running Time in ns: 14066
5th smallest element is: 6
-----------------------------
Array: [1 4 3 4 4 5 5 6 7 9]
Running Time in ns: 20980
5th smallest element is: 5
-----------------------------
Array: [3 4 2 4 5 6 6 7 9 9]
Running Time in ns: 23841
5th smallest element is: 6
-----------------------------
Array: [1 1 3 3 4 6 6 6 6 7]
Running Time in ns: 24795
5th smallest element is: 6
-----------------------------
Array: [2 2 2 3 4 4 4 7 6 7]
Running Time in ns: 20980
5th smallest element is: 4
-----------------------------
Array: [1 1 1 2 2 3 3 5 5 6]
Running Time in ns: 20027
5th smallest element is: 3
-----------------------------
Array: [1 2 4 4 5 6 6 7 7 9]
Running Time in ns: 21934
5th smallest element is: 6
-----------------------------
